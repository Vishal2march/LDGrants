apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'war'

group = 'ldgrants'
version = '2.0.0'

description = """"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

sourceSets.main.resources.srcDirs = [ "src/" ]
sourceSets.main.resources.includes = [ "**/*.xml", "**/*.properties"  ]

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}


repositories {
        
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
	compile group: 'javax.mail', name: 'mail', version: '1.4.7'
	compile fileTree(include: ['*.jar'], dir: 'WebContent/WEB-INF/lib')
	compile group: 'com.hynnet', name: 'oracle-driver-ojdbc6', version:'12.1.0.1'
    compile group: 'org.apache.struts', name: 'struts2-core', version:'2.5.10.1'
    compile group: 'spring', name: 'spring-context', version:'1.0.2'
    compile group: 'org.springframework', name: 'spring-jdbc', version:'4.2.6.RELEASE'
    compile group: 'org.apache.tiles', name: 'tiles-extras', version:'3.0.5'
    compile group: 'org.apache.struts', name: 'struts2-json-plugin', version:'2.5.10.1'
    compile group: 'log4j', name: 'log4j', version:'1.2.17'
}

war	{

	webAppDirName= 'WebContent'
}

task autoIncrementer {
 
    def versionPropsFile = file('src/version.properties')
 
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
 
    } else {
        throw new GradleException("Could not read version.properties!")
    }
}
